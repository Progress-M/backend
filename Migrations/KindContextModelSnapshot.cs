// <auto-generated />
using System;
using Main.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace registry.Migrations
{
    [DbContext(typeof(KindContext))]
    partial class KindContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Main.PostgreSQL.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("text");

                    b.Property<string>("INN")
                        .HasColumnName("inn")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("text");

                    b.Property<int?>("ProductСategoryId")
                        .HasColumnName("product_сategory_id")
                        .HasColumnType("integer");

                    b.Property<string>("Representative")
                        .HasColumnName("representative")
                        .HasColumnType("text");

                    b.Property<string>("TimeOfWork")
                        .HasColumnName("time_of_work")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_company");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("ix_company_email");

                    b.HasIndex("INN")
                        .IsUnique()
                        .HasName("ix_company_inn");

                    b.HasIndex("ProductСategoryId")
                        .HasName("ix_company_product_сategory_id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("Main.PostgreSQL.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("company_id")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnName("time_end")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnName("time_start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id")
                        .HasName("pk_offer");

                    b.HasIndex("CompanyId")
                        .HasName("ix_offer_company_id");

                    b.ToTable("offer");
                });

            modelBuilder.Entity("Main.PostgreSQL.OfferUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("OfferId")
                        .HasColumnName("offer_id")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_offer_user");

                    b.HasIndex("OfferId")
                        .HasName("ix_offer_user_offer_id");

                    b.HasIndex("UserId")
                        .HasName("ix_offer_user_user_id");

                    b.ToTable("offer_user");
                });

            modelBuilder.Entity("Main.PostgreSQL.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_product_category");

                    b.ToTable("product_category");
                });

            modelBuilder.Entity("Main.PostgreSQL.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnName("surname")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Main.PostgreSQL.Company", b =>
                {
                    b.HasOne("Main.PostgreSQL.ProductCategory", "ProductСategory")
                        .WithMany()
                        .HasForeignKey("ProductСategoryId")
                        .HasConstraintName("fk_company_product_category_product_сategory_id");
                });

            modelBuilder.Entity("Main.PostgreSQL.Offer", b =>
                {
                    b.HasOne("Main.PostgreSQL.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_offer_company_company_id");
                });

            modelBuilder.Entity("Main.PostgreSQL.OfferUser", b =>
                {
                    b.HasOne("Main.PostgreSQL.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .HasConstraintName("fk_offer_user_offer_offer_id");

                    b.HasOne("Main.PostgreSQL.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_offer_user_user_user_id");
                });
#pragma warning restore 612, 618
        }
    }
}
