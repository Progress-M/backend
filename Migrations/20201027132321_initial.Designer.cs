// <auto-generated />
using System;
using Main.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace registry.Migrations
{
    [DbContext(typeof(KindContext))]
    [Migration("20201027132321_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Main.PostgreSQL.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_company");

                    b.ToTable("company");
                });

            modelBuilder.Entity("Main.PostgreSQL.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("company_id")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnName("time_end")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnName("time_start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id")
                        .HasName("pk_offer");

                    b.HasIndex("CompanyId")
                        .HasName("ix_offer_company_id");

                    b.ToTable("offer");
                });

            modelBuilder.Entity("Main.PostgreSQL.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("Latitude")
                        .HasColumnName("latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<int?>("OfferId")
                        .HasColumnName("offer_id")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnName("surname")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("OfferId")
                        .HasName("ix_user_offer_id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Main.PostgreSQL.Offer", b =>
                {
                    b.HasOne("Main.PostgreSQL.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_offer_company_company_id");
                });

            modelBuilder.Entity("Main.PostgreSQL.User", b =>
                {
                    b.HasOne("Main.PostgreSQL.Offer", null)
                        .WithMany("Users")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("fk_user_offer_offer_id");
                });
#pragma warning restore 612, 618
        }
    }
}
